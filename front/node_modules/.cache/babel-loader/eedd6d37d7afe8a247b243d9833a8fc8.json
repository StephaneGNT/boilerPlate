{"ast":null,"code":"import _readOnlyError from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _defineProperty from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/stephane/Bureau/Projets/BoilerPlate/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/stephane/Bureau/Projets/BoilerPlate/front/src/Components/Form/Form.jsx\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _this.updateUser = function (field, event) {\n      _this.setState({\n        user: _objectSpread({}, _this.state.user, _defineProperty({}, field, event.target.value))\n      });\n    };\n\n    _this.togglePassword = function (field) {\n      _this.setState(_defineProperty({}, field, !_this.state[field]));\n    };\n\n    _this.submitForm = function () {\n      _this.checkForm();\n    };\n\n    _this.checkForm = function () {\n      var _this$state = _this.state,\n          user = _this$state.user,\n          confirmPassword = _this$state.confirmPassword;\n      var localCheckForm = true; // Check consistency between new password and old password (if existing)\n\n      if (user.password !== confirmPassword) {\n        // this.messageService.openSnackBar(\"Both passwords must be identical\",\"fail\");\n        localCheckForm = (_readOnlyError(\"localCheckForm\"), false);\n      } // Check password acceptability\n\n\n      if (user.password !== \"\" && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(user.password)) {\n        // this.messageService.openSnackBar(\"Password must contain at least 8 characters, including a majuscule, a minuscule and a figure.\",\"fail\");\n        localCheckForm = (_readOnlyError(\"localCheckForm\"), false);\n      } // Check email acceptability\n\n\n      if (!/^[^\\W][a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*\\@[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*\\.[a-zA-Z]{2,4}$/.test(user.email)) {\n        // this.messageService.openSnackBar(\"Wrong email format\",\"fail\");\n        localCheckForm = (_readOnlyError(\"localCheckForm\"), false);\n      }\n    };\n\n    _this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        password: '',\n        email: '',\n        phone: '',\n        birthDate: '',\n        currency: '',\n        comments: '' // multiline\n\n      },\n      showPassword: false,\n      showPasswordConfirm: false,\n      confirmPassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          user = _this$state2.user,\n          showPassword = _this$state2.showPassword,\n          showPasswordConfirm = _this$state2.showPasswordConfirm,\n          confirmPassword = _this$state2.confirmPassword;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        style: {\n          marginTop: '50px',\n          width: '80vw',\n          marginLeft: '10vw'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Name\",\n        value: user.lastName,\n        onChange: function onChange(e) {\n          return _this2.updateUser('lastName', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"First name\",\n        value: user.firstName,\n        onChange: function onChange(e) {\n          return _this2.updateUser('firstName', e);\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Email\",\n        value: user.email,\n        onChange: function onChange(e) {\n          return _this2.updateUser('email', e);\n        },\n        variant: \"filled\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"adornment-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        id: \"adornment-password\",\n        type: showPassword ? 'text' : 'password',\n        value: user.password,\n        onChange: function onChange(e) {\n          return _this2.updateUser('password', e);\n        },\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: function onClick() {\n            return _this2.togglePassword('showPassword');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, showPassword ? React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }) : React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Password must contain at leat 8 characters, including a minuscule, a majuscule and a figure or symbol\"))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"adornment-password-confirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Confirm password\"), React.createElement(Input, {\n        id: \"adornment-password-confirm\",\n        type: showPasswordConfirm ? 'text' : 'password',\n        value: confirmPassword,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            confirmPassword: e.target.value\n          });\n        },\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: function onClick() {\n            return _this2.togglePassword('showPasswordConfirm');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, showPasswordConfirm ? React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }) : React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.submitForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Envoyer\"));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/home/stephane/Bureau/Projets/BoilerPlate/front/src/Components/Form/Form.jsx"],"names":["React","Component","Grid","IconButton","Input","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Button","Form","props","updateUser","field","event","setState","user","state","target","value","togglePassword","submitForm","checkForm","confirmPassword","localCheckForm","password","test","email","firstName","lastName","phone","birthDate","currency","comments","showPassword","showPasswordConfirm","marginTop","width","marginLeft","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        password: '',\n        email: '',\n        phone: '',\n        birthDate: '',\n        currency: '',\n        comments: '', // multiline\n      },\n      showPassword: false,\n      showPasswordConfirm: false,\n      confirmPassword: '',\n    };\n  }\n\n  updateUser = (field, event) => {\n    this.setState({\n      user : {\n        ...this.state.user,\n        [field]: event.target.value,\n      }\n    })\n  }\n\n  togglePassword = (field) => {\n    this.setState({\n      [field]: !this.state[field]\n    });\n  };\n\n  submitForm = () => {\n    this.checkForm();\n  }\n\n  checkForm = () => {\n    const { user, confirmPassword } = this.state;\n    const localCheckForm = true;\n    // Check consistency between new password and old password (if existing)\n    if(user.password !== confirmPassword){\n      // this.messageService.openSnackBar(\"Both passwords must be identical\",\"fail\");\n      localCheckForm=false;\n    }\n    // Check password acceptability\n    if(user.password!==\"\" && !(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(user.password))){\n      // this.messageService.openSnackBar(\"Password must contain at least 8 characters, including a majuscule, a minuscule and a figure.\",\"fail\");\n      localCheckForm=false;\n    }\n    // Check email acceptability\n    if(!(/^[^\\W][a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*\\@[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*\\.[a-zA-Z]{2,4}$/.test(user.email))){\n      // this.messageService.openSnackBar(\"Wrong email format\",\"fail\");\n      localCheckForm=false;\n    }\n  }\n\n  render() {\n    const { user, showPassword, showPasswordConfirm, confirmPassword } = this.state;\n    return (\n      <Grid container spacing={24} style={{ marginTop: '50px', width: '80vw', marginLeft: '10vw' }}>\n        <Grid item xs={6}>\n          <TextField\n            required\n            label=\"Name\"\n            value={user.lastName}\n            onChange={e => this.updateUser('lastName', e)}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"First name\"\n            value={user.firstName}\n            onChange={e => this.updateUser('firstName', e)}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"Email\"\n            value={user.email}\n            onChange={e => this.updateUser('email', e)}\n            variant=\"filled\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <FormControl>\n            <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n            <Input\n              id=\"adornment-password\"\n              type={showPassword ? 'text' : 'password'}\n              value={user.password}\n              onChange={e => this.updateUser('password', e)}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Toggle password visibility\"\n                    onClick={() => this.togglePassword('showPassword')}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n            <FormHelperText>Password must contain at leat 8 characters, including a minuscule, a majuscule and a figure or symbol</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={6}>\n          <FormControl>\n            <InputLabel htmlFor=\"adornment-password-confirm\">Confirm password</InputLabel>\n            <Input\n              id=\"adornment-password-confirm\"\n              type={showPasswordConfirm ? 'text' : 'password'}\n              value={confirmPassword}\n              onChange={e => this.setState({confirmPassword: e.target.value})}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Toggle password visibility\"\n                    onClick={() => this.togglePassword('showPasswordConfirm')}\n                  >\n                    {showPasswordConfirm ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </Grid>\n        <Button onClick={()=>this.submitForm()}>Envoyer</Button>\n      </Grid>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}